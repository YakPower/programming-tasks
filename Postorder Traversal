public class Zad {

    static int[] recreateTree(int [] postOrder){
        int [] tree=new int[postOrder.length*2+1];
        Arrays.fill(tree, -1);
        int i= postOrder.length-1;
        int p;
        int t=0;
        int min=-1,max;
        tree[t]=postOrder[postOrder.length-1];
        while (i>0){

            p=i-1;
            if(p==min){
                min=-1;
                t=1;
                p--;
                i--;
            }
            if(p==-1) break;
            if(postOrder[p]>postOrder[i]){
                tree[t*2+2]=postOrder[p];

                while (p>min){
                    if(postOrder[i]>postOrder[p]){
                        tree[t*2+1]=postOrder[p];
                        if(min==-1){
                            min=p;
                        }
                        else if(postOrder[min]>postOrder[p])
                        min=p;
                    }
                    p--;
                }
            }
            else tree[t*2+1]=postOrder[p];

            i--;
            t+=2;
        }
        return tree;
}

    public static void main(String[] args) {
        System.out.println(Arrays.toString(recreateTree(new int[]{8, 12, 10, 16, 25, 20, 15})));
    }
}
